---
- name: Test Windows SMB Configuration
  hosts: windows11
  gather_facts: yes
  vars_files:
    - vault.yml
  
  tasks:
    - name: Test WinRM connection
      win_ping:
      
    - name: Display connection info
      debug:
        msg:
          - "Connected to: {{ inventory_hostname }} ({{ ansible_host }})"
          - "User: {{ ansible_user }}"
          - "Connection: {{ ansible_connection }}"
    
    - name: Test variables
      debug:
        msg:
          - "TrueNAS server IP: {{ truenas_server_ip | default('NOT DEFINED') }}"
          - "SMB user: {{ truenas_smb_user | default('NOT DEFINED') }}"
          - "SMB password defined: {{ 'YES' if truenas_smb_password is defined else 'NO' }}"
          - "Windows password defined: {{ 'YES' if windows_password is defined else 'NO' }}"
          - "Network drives count: {{ windows_network_drives | length if windows_network_drives is defined else 'NOT DEFINED' }}"
    
    - name: Test basic network connectivity to TrueNAS
      win_shell: "ping -n 1 {{ truenas_server_ip }}"
      register: ping_result
      failed_when: false
      when: truenas_server_ip is defined
    
    - name: Show ping result
      debug:
        msg: "Ping to TrueNAS ({{ truenas_server_ip }}): {{ 'SUCCESS' if ping_result.rc == 0 else 'FAILED' }}"
      when: truenas_server_ip is defined and ping_result is defined
    
    - name: Test SMB connectivity
      win_shell: 'net use * "\\{{ truenas_server_ip }}\Downloads" "{{ truenas_smb_password }}" /user:{{ truenas_smb_user }}'
      register: smb_test_result
      failed_when: false
      when: 
        - truenas_server_ip is defined
        - truenas_smb_password is defined
        - truenas_smb_user is defined
    
    - name: Show SMB test result
      debug:
        msg: "SMB test to TrueNAS: {{ 'SUCCESS' if smb_test_result.rc == 0 else 'FAILED - ' + (smb_test_result.stderr | default('Unknown error')) }}"
      when: smb_test_result is defined
    
    - name: Clean up test connection
      win_shell: 'net use * /delete /yes'
      failed_when: false
      when: smb_test_result is defined and smb_test_result.rc == 0
    
    - name: Test timezone configuration
      win_shell: "Get-TimeZone | Select-Object -ExpandProperty Id"
      register: timezone_check
      failed_when: false
    
    - name: Show current timezone
      debug:
        msg: "Current timezone: {{ timezone_check.stdout | trim }}"
      when: timezone_check is defined
