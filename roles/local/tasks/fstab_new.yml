---
# Resilient NFS setup for local (ansible server) role
# Based on workstation resilient NFS but adapted for local environment

- name: Install NFS utilities
  package:
    name: nfs-common
    state: present

- name: Create /mnt/truenas base directory
  file:
    path: /mnt/truenas
    state: directory
    mode: '0755'
    owner: root
    group: root

# Remove old direct NFS mounts first
- name: Unmount old direct NFS mounts for bill
  mount:
    path: "/home/bill/{{ item.name }}"
    state: unmounted
  loop: "{{ user_directories.bill }}"
  when: item.type == "symlink"
  failed_when: false

- name: Remove old direct NFS mount entries from fstab for bill
  mount:
    path: "/home/bill/{{ item.name }}"
    state: absent
  loop: "{{ user_directories.bill }}"
  when: item.type == "symlink"

- name: Create NFS mount point directories
  file:
    path: "{{ item.dest }}"
    state: directory
    mode: '0755'
    owner: root
    group: root
  loop: "{{ nfs_mounts }}"

- name: Add NFS mounts to fstab
  mount:
    path: "{{ item.dest }}"
    src: "{{ item.src }}"
    fstype: nfs
    opts: "{{ item.opts }}"
    state: present
  loop: "{{ nfs_mounts }}"

- name: Create shared mount point directories with proper ownership
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop: "{{ shared_mount_points }}"

- name: Mount NFS shares (gracefully handle failures)
  shell: mount -a
  failed_when: false

- name: Check which NFS mounts are actually available
  stat:
    path: "{{ item.dest }}"
  register: nfs_mount_check
  loop: "{{ nfs_mounts }}"

- name: Display NFS mount status
  debug:
    msg: "NFS mount {{ item.item.dest }} is {{ 'available' if item.stat.exists else 'unavailable' }}"
  loop: "{{ nfs_mount_check.results }}"
