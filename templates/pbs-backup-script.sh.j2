#!/bin/bash
# PBS Backup Script for {{ item.backup_id }}
# Generated by Ansible

set -e

# Configuration
PBS_SERVER="{{ pbs_server }}"
PBS_PORT="{{ pbs_port }}"
PBS_DATASTORE="{{ pbs_datastore }}"
PBS_USER="{{ pbs_user }}"
BACKUP_ID="{{ item.backup_id }}"
BACKUP_PATH="{{ item.path }}"

# Logging
LOG_FILE="/var/log/pbs-backup-${BACKUP_ID}.log"
exec > >(tee -a "${LOG_FILE}") 2>&1

echo "=== Starting PBS Backup: ${BACKUP_ID} at $(date) ==="

# Check if backup path exists
if [ ! -d "${BACKUP_PATH}" ]; then
    echo "ERROR: Backup path ${BACKUP_PATH} does not exist!"
    exit 1
fi

# Build exclude parameters
EXCLUDE_ARGS=""
{% if item.exclude_patterns is defined %}
{% for pattern in item.exclude_patterns %}
EXCLUDE_ARGS="${EXCLUDE_ARGS} --exclude '{{ pattern }}'"
{% endfor %}
{% endif %}

# Run backup
echo "Backing up ${BACKUP_PATH} to ${PBS_SERVER}:${PBS_DATASTORE}/${BACKUP_ID}"

eval proxmox-backup-client backup \
    --repository "${PBS_USER}@${PBS_SERVER}:${PBS_PORT}:${PBS_DATASTORE}" \
    "${BACKUP_ID}.pxar:${BACKUP_PATH}" \
    ${EXCLUDE_ARGS} \
    --backup-id "$(hostname -s)" \
    --backup-time "$(date +%s)"

if [ $? -eq 0 ]; then
    echo "=== Backup completed successfully at $(date) ==="
else
    echo "=== Backup failed at $(date) ==="
    exit 1
fi
